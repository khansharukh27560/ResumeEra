{"version":3,"file":"static/js/6676.39468556.chunk.js","mappings":"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","sources":["component/PdfDownloadButton.jsx","component/Toolbar.jsx","component/previewfolder/Preview302.jsx","component/PreviewHeader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import GoogleAd from './adFolder/GoogleAd'; // Adjust path as needed\r\nimport '../css/PdfDownloadButton.css'\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport Popup from 'reactjs-popup';\r\nconst ResumeDownloadSection = ({\r\n    inputFields,\r\n    setInputFields,\r\n    bgColor,\r\n    setBgColor,\r\n    fontStyle,\r\n    setFontStyle,\r\n    headingColor,\r\n    setHeadingColor,\r\n    fontColor,\r\n    setFontColor,\r\n    fontSize,\r\n    setFontSize,\r\n    headingSize,\r\n    setHeadingSize,\r\n    margin,\r\n    setMargin,\r\n    padding,\r\n    setPadding,\r\n    lineSpacing,\r\n    setLineSpacing,\r\n    sectionSpacing,\r\n    setSectionSpacing,\r\n    elementId,\r\n}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const handleDownloadPDF = async () => {\r\n        setIsLoading(true);\r\n        const element = document.getElementById(elementId);\r\n        \r\n        if (!element) {\r\n            setIsLoading(false);\r\n            alert('Resume element not found!');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const scale = 2;  // Adjust scale for better quality\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n                useCORS: true,\r\n                logging: false,\r\n                textRendering: \"geometricPrecision\",\r\n                width: element.scrollWidth,\r\n                height: element.scrollHeight,\r\n                windowWidth: element.scrollWidth,\r\n                windowHeight: element.scrollHeight,\r\n            });\r\n    \r\n            const imgData = canvas.toDataURL('image/jpeg', 0.85);  // High quality JPEG with 85% compression\r\n            const pdf = new jsPDF('p', 'mm', 'a4');\r\n    \r\n            const imgWidth = 210;\r\n            const pageHeight = 297;\r\n            const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n            let heightLeft = imgHeight;\r\n            let position = 0;\r\n    \r\n            // Force content into two pages\r\n            const maxHeight = 2 * pageHeight;  // Max height for two pages combined\r\n            let remainingHeight = imgHeight;\r\n    \r\n            // Add image to the PDF, ensuring it's split into two pages if necessary\r\n            if (remainingHeight <= maxHeight) {\r\n                pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight, undefined, 'FAST');\r\n                remainingHeight -= pageHeight;  // First page\r\n    \r\n                // Second page logic\r\n                if (remainingHeight > 0) {\r\n                    pdf.addPage();\r\n                    pdf.addImage(imgData, 'JPEG', 0, -pageHeight, imgWidth, imgHeight, undefined, 'FAST');  // Shift for second page\r\n                }\r\n            } else {\r\n                // If content is too large for 1 page, force split into two pages.\r\n                pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, pageHeight, undefined, 'FAST');  // First page\r\n                pdf.addPage();\r\n                pdf.addImage(imgData, 'JPEG', 0, -pageHeight, imgWidth, pageHeight, undefined, 'FAST');  // Second page\r\n            }\r\n    \r\n            // Get filename from input fields, ensuring it's safe for use in filenames\r\n            const filename = inputFields ? inputFields.replace(/[^\\w\\s]/gi, '_') : 'default_filename';\r\n            pdf.save(`${filename}.pdf`);\r\n    \r\n            setIsLoading(false);    \r\n            // Clear canvas to free memory\r\n            canvas.width = 0;\r\n            canvas.height = 0;\r\n    \r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            // console.error('Error downloading PDF:', error);\r\n            alert('Failed to download PDF. Please try again.');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"resume-download-section\" \r\n        style={{ width:'fit-content', border:'1px solid black' }}>\r\n            \r\n\r\n            {/* Customization Controls */}\r\n            <div className=\"customization-controls\" >\r\n                <div className=\"color-picker\" title='Background Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={bgColor}\r\n                        onChange={(e) => setBgColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"font-style-selector\" title=\"Font Style\">\r\n  <i className=\"fa-solid fa-font\" />\r\n  <select\r\n    value={fontStyle}\r\n    onChange={(e) => setFontStyle(e.target.value)}\r\n    className=\"font-select\"\r\n  >\r\n    <option value=\"Arial\">Arial</option>\r\n    <option value=\"Arial Black\">Arial Black</option>\r\n    <option value=\"Verdana\">Verdana</option>\r\n    <option value=\"Tahoma\">Tahoma</option>\r\n    <option value=\"Trebuchet MS\">Trebuchet MS</option>\r\n    <option value=\"Times New Roman\">Times New Roman</option>\r\n    <option value=\"Georgia\">Georgia</option>\r\n    <option value=\"Garamond\">Garamond</option>\r\n    <option value=\"Courier New\">Courier New</option>\r\n    <option value=\"Brush Script MT\">Brush Script MT</option>\r\n    <option value=\"Impact\">Impact</option>\r\n    <option value=\"Lucida Console\">Lucida Console</option>\r\n    <option value=\"Palatino Linotype\">Palatino Linotype</option>\r\n    <option value=\"Segoe UI\">Segoe UI</option>\r\n    <option value=\"Comic Sans MS\">Comic Sans MS</option>\r\n    <option value=\"Calibri\">Calibri</option>\r\n    <option value=\"Cambria\">Cambria</option>\r\n    <option value=\"Helvetica\">Helvetica</option>\r\n    <option value=\"Monaco\">Monaco</option>\r\n    <option value=\"Optima\">Optima</option>\r\n  </select>\r\n</div>\r\n\r\n\r\n                <div className=\"color-picker\"  title='Font Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={fontColor}\r\n                        onChange={(e) => setFontColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"color-picker\" title='Heading Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={headingColor}\r\n                        onChange={(e) => setHeadingColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"size-selector\" title='Heading Size'>\r\n                    <i className=\"fa-solid fa-heading\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={headingSize}\r\n                        onChange={(e) => setHeadingSize(Number(e.target.value))}\r\n                        className=\"size-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"size-selector\" title='Font Size'>\r\n                    <i className=\"fa-solid fa-font\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={fontSize}\r\n                        onChange={(e) => setFontSize(Number(e.target.value))}\r\n                        className=\"size-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Margin'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={margin}\r\n                        onChange={(e) => setMargin(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Padding'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={padding}\r\n                        onChange={(e) => setPadding(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Line Spacing'>\r\n                    <i className=\"fa-solid fa-font\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        value={lineSpacing}\r\n                        onChange={(e) => setLineSpacing(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Section Spacing'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={sectionSpacing}\r\n                        onChange={(e) => setSectionSpacing(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"headers  d-md-flex\" title='Give Your Resume a Name'>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your resume name\"\r\n                    className=\"resume-name-input\"\r\n                    value={inputFields}\r\n                    onChange={(e) => setInputFields(e.target.value)}\r\n                />\r\n                <div>\r\n                    <Popup modal nested trigger={<button\r\n                    onClick={handleDownloadPDF}\r\n                    type=\"button\"\r\n                    className=\"btn download-button\"\r\n                    disabled={isLoading}\r\n                    title='Download'\r\n                >\r\n                    {isLoading ? 'Downloading...' : 'Download'}\r\n                </button>}>\r\n                {( close)=>(\r\n                    <div>\r\n                        <h3>Go For Next <i class=\"fa-solid fa-jet-fighter\"></i>...</h3>\r\n                        <button type='submit' onClick={(e)=>{\r\n                            handleDownloadPDF(e);\r\n                            close();\r\n                        }}>Close</button>\r\n                    </div>\r\n                    \r\n                )}\r\n                </Popup>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(ResumeDownloadSection);\r\n","import React,{memo} from 'react';\r\n\r\n\r\n    export const changeAlignment = (alignment) => {\r\n        document.execCommand('justify' + alignment, false, null);\r\n    };\r\n    \r\n    \r\n    export const toggleStyle = (style) => {\r\n        document.execCommand(style, false, null);\r\n    };\r\n\r\n    // Function to toggle lists (bullet and numbered)\r\n    export const toggleList = (listType) => {\r\n        document.execCommand(listType, false, null);\r\n    };\r\n// Reusable Toolbar Component\r\n function Toolbar({ toggleStyle, changeAlignment, toggleList }) {\r\n    \r\n    return (\r\n        <div style={{\r\n          display:'flex', justifyContent:'start', alignItems:'center', width:'fit-content',borderRadius:'15px', position: 'fixed', top: '150px', left: '10px', right: '10px', zIndex: '1000', backgroundColor: 'transparent', padding: '10px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', marginBottom: '20px'\r\n        }}>\r\n            <button onClick={() => toggleStyle('bold')}><b>B</b></button>\r\n            <button onClick={() => toggleStyle('italic')}><i>I</i></button>\r\n            <button onClick={() => toggleStyle('underline')}><u>U</u></button>\r\n            <button onClick={() => toggleList('insertUnorderedList')}><i className=\"fa-solid fa-list-ul\"></i></button>\r\n            <button onClick={() => toggleList('insertOrderedList')}><i className=\"fa-solid fa-list-ol\"></i></button>\r\n            <button onClick={() => changeAlignment('Left')}><i className=\"fa-solid fa-align-left\"></i></button>\r\n            <button onClick={() => changeAlignment('Center')}><i className=\"fa-solid fa-align-center\"></i></button>\r\n            <button onClick={() => changeAlignment('Right')}><i className=\"fa-solid fa-align-right\"></i></button>\r\n            <button onClick={() => changeAlignment('Justify')}><i className=\"fa-solid fa-align-justify\"></i></button>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(Toolbar);","import React, { useState, useEffect } from 'react';\r\nimport '../previewfolder/CSS/preview301.css';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport GoogleAd from '../adFolder/GoogleAd';\r\nimport PdfDownloadButton from '../PdfDownloadButton';\r\n// import Toolbar from '../Toolbar';\r\nimport PreviewHeader from '../PreviewHeader';\r\nimport Toolbar, { changeAlignment, toggleStyle, toggleList } from '../Toolbar'\r\nexport default function Preview301() {\r\n  // State for PDF filename and styling options\r\n  const [inputFields, setInputFields] = useState('resume.pdf');\r\n  const [bgColor, setBgColor] = useState('white'); // Default background color\r\n  const [fontStyle, setFontStyle] = useState('Arial'); // Default font style\r\n  const [fontColor, setFontColor] = useState('#000000'); // Default font color (corrected from '#rrggbb')\r\n  const [headingColor, setHeadingColor] = useState('#6a8a3f'); // Default heading color\r\n  const [fontSize, setFontSize] = useState(16); // Font size for paragraphs\r\n  const [headingSize, setHeadingSize] = useState(20); // Font size for headings (replaced fontSizeheading)\r\n  const [margin, setMargin] = useState(10); // Margin for resume wrapper\r\n  const [padding, setPadding] = useState(10); // Padding for sections\r\n  const [lineSpacing, setLineSpacing] = useState(1.2); // Line spacing for text\r\n  const [sectionSpacing, setSectionSpacing] = useState(15); // Spacing between sections\r\n\r\n  // Editable headings\r\n  const [softSkillsHeading, setSoftSkillsHeading] = useState('Soft Skill');\r\n  const [experienceHeading, setExperienceHeading] = useState('Work Experience');\r\n  const [educationHeading, setEducationHeading] = useState('Education');\r\n  const [languageHeading, setLanguageHeading] = useState('Language');\r\n  const [technicalSkillsHeading, setTechnicalSkillsHeading] = useState('Technical Skill');\r\n  const [interestHeading, setInterestHeading] = useState('Interest');\r\n\r\n  // Redux state selectors\r\n  const personalInfo = useSelector((state) => state.reducer.personalInfo);\r\n  const education = useSelector((state) => [state.reducer.education[0]]);\r\n  const keyskills = useSelector((state) => [state.reducer.keySkills[0]]);\r\n  const work = useSelector((state) => [state.reducer.workExperience[0]]);\r\n  const Honor = useSelector((state) => [state.reducer.honorAndaward[0]]);\r\n  const SoftSkill = useSelector((state) => [state.reducer.addSoftSkills[0]]);\r\n  const socialMediaLink = useSelector((state) => [state.reducer.socialMediaLink[0]]);\r\n  const languages = useSelector((state) => [state.reducer.addLanguage[0]]);\r\n  const Hobbies = useSelector((state) => [state.reducer.addHobies[0]]);\r\n  const project = useSelector((state) => [state.reducer.projectData[0]]);\r\n  const certificate = useSelector((state) => [state.reducer.certificateData?.[0] || []])\r\n\r\n  const styleHeading = {\r\n    whiteSpace: 'nowrap', // Corrected from 'none'\r\n    fontFamily: fontStyle,\r\n    color: headingColor,\r\n    fontSize: `${headingSize * 1.2}px`, // Slightly larger for name\r\n    lineHeight: `${lineSpacing}em`,\r\n    marginBottom: `${sectionSpacing}px`,\r\n  }\r\n  const styleParagraph = {\r\n    fontFamily: fontStyle,\r\n    color: fontColor,\r\n    fontSize: `${fontSize}px`, // Slightly larger for name\r\n    lineHeight: `${lineSpacing}em`,\r\n    // marginBottom: `${sectionSpacing}px`,\r\n  }\r\n  const stylesmall = {\r\n    fontFamily: fontStyle,\r\n    color: fontColor,\r\n    fontSize: `${fontSize}px`, // Slightly larger for name\r\n    lineHeight: `${lineSpacing}em`,\r\n    // marginBottom: `${sectionSpacing}px`,\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header style={{ paddingLeft: '10px', paddingRight: '10px', textAlign: 'center' }}>\r\n        <PreviewHeader />\r\n      </header>\r\n      <GoogleAd />\r\n      <div className=\"main301 d-md-flex marging\">\r\n        <Toolbar toggleStyle={toggleStyle} changeAlignment={changeAlignment} toggleList={toggleList} />\r\n        <div\r\n          className=\"preview301\"\r\n          style={{ backgroundColor: bgColor, margin: `${margin}px` }}\r\n          id=\"Alisha_mirza301\"\r\n          contentEditable\r\n        >\r\n          <div className=\"personalInfo301\" style={{ backgroundColor: bgColor, padding: `${padding}px` }}>\r\n            <div className=\"bluelines\">\r\n              <div className=\"personal-info\">\r\n              <h4\r\n                className='heading'\r\n                style={{...styleHeading,fontSize: `${headingSize * 1.5}px`,}}\r\n              >\r\n                {personalInfo.firstName} {personalInfo.lastName}\r\n              </h4>\r\n              <p\r\n                className=\"jobtitle\"\r\n                style={styleParagraph}\r\n              >\r\n                {work[0][0].jobtitle} {/* Simplified to display only the first job title */}\r\n              </p>\r\n            </div>\r\n            </div>\r\n            \r\n\r\n            <div className=\"contact301 \" style={{marginTop:'70px'}}>\r\n              <p\r\n                style={styleParagraph}\r\n              >\r\n                <i className=\"bi bi-telephone-fill me-2 ms-2\" style={{ color: headingColor, fontSize: `${fontSize}px` }} />\r\n                {personalInfo.mobileNumber}\r\n              </p>\r\n\r\n              <p\r\n                style={styleParagraph}\r\n              >\r\n                <i className=\"bi bi-envelope me-2 ms-2\" style={{ color: headingColor, fontSize: `${fontSize}px` }} />\r\n                {personalInfo.email}\r\n              </p>\r\n\r\n            </div>\r\n            <div>\r\n              {socialMediaLink[0].map((item, index) => (\r\n                <ul key={index}>\r\n                  <li style={styleParagraph} className='list-unstyled'>\r\n                    {item.url}\r\n                  </li>\r\n                </ul>\r\n              ))}\r\n            </div>\r\n            <hr className=\"dashed-line\" />\r\n            <p\r\n              className=\"object\"\r\n              style={styleParagraph}\r\n            >\r\n              {personalInfo.object}\r\n            </p>\r\n          </div>\r\n          <hr className=\"dashed-line\" />\r\n          <div className=\"soft-skill\" style={{ backgroundColor: bgColor, padding: `${padding}px` }}>\r\n            <h4 style={styleHeading}\r\n            >\r\n              {softSkillsHeading}\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n              {SoftSkill[0].map((keys, index) => (\r\n                <div key={index} className=\"technical-skill-item301\">\r\n                  <ul style={{ marginRight: '0px', minWidth: '100px', marginBottom: '-5px' }}>\r\n                    <li style={styleParagraph}\r\n                    >\r\n                      {keys.softSkill} {/* Corrected from softSkill to match Redux state */}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"firstdiv301\" style={{ padding: `${padding}px` }}>\r\n            <div className=\"me-3\">\r\n              <div className=\"experience-section301\">\r\n                <h4\r\n                  style={styleHeading}\r\n                  className=\"details-title301\"\r\n                >\r\n                  {experienceHeading}\r\n                </h4>\r\n                {work[0].map((works, index) => (\r\n                  <div key={index} className=\"employment-history301\" style={{ marginBottom: `${sectionSpacing}px` }}>\r\n                    <div className=\"exp-inner301\">\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        <b style={{ fontWeight: 500, color: fontColor }}>{works.jobtitle}</b>\r\n                        <br />\r\n                        {works.organization} {works.city || 'N/A'}\r\n                      </p>\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        <i>{works.startYear} - {works.endYear}</i>\r\n                      </p>\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        {works.aboutexperience}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"education-section301 mt-1\">\r\n                <h4\r\n                  className=\"details-title301\"\r\n                  style={styleHeading}\r\n                >\r\n                  {educationHeading}\r\n                </h4>\r\n                {education[0].map((edu, index) => (\r\n                  <div key={index} className=\"education-item301\" style={{ marginBottom: `${sectionSpacing}px` }}>\r\n                    <div className=\"certificate-item301\">\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        {edu.degree} in {edu.university}\r\n                      </p>\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        {edu.university}\r\n                      </p>\r\n                      <p\r\n                        style={styleParagraph}\r\n                        className=\"employment-detail301\"\r\n                      >\r\n                        {edu.startYear} - {edu.endYear}, {edu.city}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"language-301\">\r\n                <h4\r\n                  style={styleHeading}\r\n                >\r\n                  {languageHeading}\r\n                </h4>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                  {languages[0].map((keys, index) => (\r\n                    <div key={index} className=\"language-item301\">\r\n                      <p\r\n                        style={styleParagraph}\r\n                      >\r\n                        {keys.language}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"technical-\">\r\n                <h4 style={styleHeading}\r\n                >\r\n                  {technicalSkillsHeading}\r\n                </h4>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                  {keyskills[0].map((keys, index) => (\r\n                    <div key={index} className=\"technical-skill-item301\">\r\n                      <ul\r\n                        style={styleParagraph}\r\n                      >\r\n                        <li\r\n                          style={styleParagraph}\r\n                        >\r\n                          {keys.keyskills}\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"technical-skills-title301 mt-1\">\r\n                <h4\r\n                  style={styleHeading}\r\n                >\r\n                  {interestHeading}\r\n                </h4>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                  {Hobbies[0].map((keys, index) => (\r\n                    <div key={index} className=\"d-flex align-items-center\">\r\n                      <ul\r\n\r\n                      >\r\n                        <li\r\n                          style={styleParagraph}\r\n                        >\r\n                          {/* Uncomment if you want to reintroduce hobby icons */}\r\n                          {/* <span style={{ marginRight: '10px', fontSize: '20px' }}>\r\n                            {HobbyIcons[keys.hobbies] || '🎯'}\r\n                          </span> */}\r\n                          {keys.hobbies}\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {project?.length >= 0 && (\r\n                <div className=\"technical-skills-title301 mt-1\" style={{ marginTop: '-50px' }}>\r\n                  <h4\r\n                    style={styleHeading}\r\n                  >\r\n                    PROJECT\r\n                  </h4>\r\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                    {project[0].map((keys, index) => (\r\n                      <div key={index} className=\"d-flex justify-content-start align-items-start\" style={{ flexDirection: 'column' }}>\r\n                        <p>\r\n                          <small style={stylesmall}> <strong style={stylesmall}>Project Link:- </strong>{keys.link}</small>\r\n                        </p>\r\n                        <p>\r\n                          <small style={stylesmall}> <strong style={stylesmall}>Start Time:-</strong>{keys.startTime}</small> <small style={stylesmall}> <strong style={stylesmall}>End Time:-</strong>{keys.endTime}</small>\r\n                        </p>\r\n                        <p>\r\n\r\n                        </p>\r\n                        <p>\r\n                          <small style={stylesmall}> <strong style={stylesmall}>Project Description:-</strong>{keys.description}</small>\r\n                        </p>\r\n\r\n\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {certificate?.[0].length >= 0 && (\r\n                <div className=\"technical-skills-title301 mt-1\" style={{ marginTop: '-50px' }}>\r\n                  <h4 style={styleHeading}\r\n                  // style={{marginTop:'-100px'}}\r\n                  >\r\n                    CERTIFICATE\r\n                  </h4>\r\n                  <div style={{ display: 'flex', flexWrap: 'wrap', gap: '16px' }}>\r\n                    {certificate?.[0].map((keys, index) => (\r\n                      <div key={index} className=\"d-flex align-items-start justify-content-start\" style={{ flexDirection: 'column' }}>\r\n                        <p><strong style={stylesmall}>CertificateName:-</strong> <small style={stylesmall}>{keys.certificateName}</small></p>\r\n                        <p><strong style={stylesmall}>Organization:-</strong> <small style={stylesmall}>{keys.organization}</small></p>\r\n                        <p><strong style={stylesmall}>IssueDate:-</strong> <small style={stylesmall}>{keys.issueDate}</small></p>\r\n                        <p><strong style={stylesmall}>Description</strong> <small style={stylesmall}>{keys.description}</small></p>\r\n\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"resume-download-section d-md-flex justify-content-around mt-3\" style={{ width: '100%' }}>\r\n          <PdfDownloadButton\r\n            inputFields={inputFields}\r\n            setInputFields={setInputFields}\r\n            bgColor={bgColor}\r\n            setBgColor={setBgColor}\r\n            fontStyle={fontStyle}\r\n            setFontStyle={setFontStyle}\r\n            headingColor={headingColor}\r\n            setHeadingColor={setHeadingColor}\r\n            fontColor={fontColor}\r\n            setFontColor={setFontColor}\r\n            fontSize={fontSize}\r\n            setFontSize={setFontSize}\r\n            headingSize={headingSize}\r\n            setHeadingSize={setHeadingSize}\r\n            margin={margin}\r\n            setMargin={setMargin}\r\n            padding={padding}\r\n            setPadding={setPadding}\r\n            lineSpacing={lineSpacing}\r\n            setLineSpacing={setLineSpacing}\r\n            sectionSpacing={sectionSpacing}\r\n            setSectionSpacing={setSectionSpacing}\r\n            elementId=\"Alisha_mirza301\"\r\n          />\r\n        </div>\r\n        <div className=\"d-sm-flex\"><GoogleAd /><GoogleAd /><GoogleAd /></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport '../css/previewHeader.css'\r\nconst PreviewHeader = ()=>{\r\n    return(\r\n        <div className=\"previewheader\" style={{  }}>\r\n                <h1 style={{ }}>\r\n                    Congratulations on Creating a Winning Resume!\r\n                </h1>\r\n                <small style={{ textAlign: 'center' }}>\r\n                    <i style={{ color: 'white', backgroundColor: 'red' }}> warning </i>: if resume doesn’t show your data, please refresh the page\r\n                </small>\r\n                <p style={{ }}>\r\n                    Your journey towards your dream job starts here! By crafting a professional resume with ResumeEra, you've taken the first step in showcasing your skills, experiences, and aspirations effectively. A well-structured resume is more than just a document—it's your story, your voice, and your opportunity to shine.\r\n\r\n                    Whether you're a fresher stepping into the professional world or an experienced professional climbing the career ladder, a compelling resume can make all the difference. Our platform ensures your resume is not only visually appealing but also tailored to meet industry standards.\r\n\r\n                    Take a moment to review your resume. Remember, the right opportunity is just around the corner. Stand out, stay confident, and let ResumeEra be your trusted partner in achieving your career goals!\r\n                </p>\r\n            </div>\r\n    )\r\n}\r\nexport default React.memo(PreviewHeader)"],"names":["ResumeDownloadSection","_ref","inputFields","setInputFields","bgColor","setBgColor","fontStyle","setFontStyle","headingColor","setHeadingColor","fontColor","setFontColor","fontSize","setFontSize","headingSize","setHeadingSize","margin","setMargin","padding","setPadding","lineSpacing","setLineSpacing","sectionSpacing","setSectionSpacing","elementId","isLoading","setIsLoading","useState","handleDownloadPDF","async","element","document","getElementById","alert","scale","canvas","html2canvas","useCORS","logging","textRendering","width","scrollWidth","height","scrollHeight","windowWidth","windowHeight","imgData","toDataURL","pdf","jsPDF","imgWidth","pageHeight","imgHeight","position","remainingHeight","addImage","undefined","addPage","filename","replace","save","error","_jsxs","className","style","border","children","title","_jsx","type","value","onChange","e","target","Number","step","placeholder","Popup","modal","nested","trigger","onClick","disabled","close","class","React","changeAlignment","alignment","execCommand","toggleStyle","toggleList","listType","Toolbar","display","justifyContent","alignItems","borderRadius","top","left","right","zIndex","backgroundColor","boxShadow","marginBottom","memo","Preview301","softSkillsHeading","setSoftSkillsHeading","experienceHeading","setExperienceHeading","educationHeading","setEducationHeading","languageHeading","setLanguageHeading","technicalSkillsHeading","setTechnicalSkillsHeading","interestHeading","setInterestHeading","personalInfo","useSelector","state","reducer","education","keyskills","keySkills","work","workExperience","SoftSkill","honorAndaward","addSoftSkills","socialMediaLink","languages","addLanguage","Hobbies","addHobies","project","projectData","certificate","_state$reducer$certif","certificateData","styleHeading","whiteSpace","fontFamily","color","lineHeight","styleParagraph","stylesmall","paddingLeft","paddingRight","textAlign","PreviewHeader","GoogleAd","id","contentEditable","firstName","lastName","jobtitle","marginTop","mobileNumber","email","map","item","index","url","object","flexWrap","gap","keys","marginRight","minWidth","softSkill","works","fontWeight","organization","city","startYear","endYear","aboutexperience","edu","degree","university","language","hobbies","length","flexDirection","link","startTime","endTime","description","certificateName","issueDate","PdfDownloadButton"],"sourceRoot":""}