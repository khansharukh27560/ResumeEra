{"version":3,"file":"static/js/7648.64a89317.chunk.js","mappings":"+PAUA,MAAMA,EAAmBC,IAAqB,IAApB,WAAEC,GAAYD,EACpC,MAAOE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,MAE/CG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAyCjB,OACIC,EAAAA,EAAAA,KAAA,WAASC,UAAU,qBAAqB,aAAW,sCAAqCC,UACpFF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CAxCXC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,KACfC,QAAS,cACTC,cAAc,EACdC,WAAW,EACXC,SAAU,WACVC,WAAY,CACR,CACIC,WAAY,KACZC,SAAU,CAAEV,aAAc,IAE9B,CACIS,WAAY,IACZC,SAAU,CAAEV,aAAc,IAE9B,CACIS,WAAY,IACZC,SAAU,CAAEV,aAAc,IAE9B,CACIS,WAAY,IACZC,SAAU,CAAEV,aAAc,KAcVL,SACL,OAAVZ,QAAU,IAAVA,OAAU,EAAVA,EAAY4B,KAAKC,IACdnB,EAAAA,EAAAA,KAAA,OAAoBC,UAAU,iBAAgBC,UAC1CkB,EAAAA,EAAAA,MAAA,OACInB,UAAU,yBACVoB,aAAcA,IAAM7B,EAAgB2B,EAAMG,IAC1CC,aAAcA,IAAM/B,EAAgB,MAAMU,SAAA,CAEzCR,IAAmByB,EAAMG,KACtBtB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAAC,gBAGlCF,EAAAA,EAAAA,KAACwB,EAAAA,cAAa,CACVvB,UAAU,iBACVwB,IAAKN,EAAMM,IACXC,IAAKP,EAAMO,KAAO,4BAClBC,OAAO,OACPC,WAAYA,IAAMjC,EAAkBwB,EAAMG,IAC1CO,UAAWA,IAAMlC,EAAkB,MACnCmC,eAAe,qBAGlBvC,IAAiB4B,EAAMG,KACpBtB,EAAAA,EAAAA,KAAA,UACI+B,QAAUC,GAjCtBC,EAACD,EAAGE,KACpBF,EAAEG,iBAEFvC,EADa,aAAasC,KAE1BpC,GAASsC,EAAAA,EAAAA,IAAaF,GAAS,EA6BaD,CAAYD,EAAGb,EAAMG,IACrCrB,UAAU,kBACV,aAAW,uBACX,YAAU,QACV,oBAAkB,iBAAgBC,SACrC,kBA3BHiB,EAAMG,SAmClB,EAIlB,EAAee,EAAAA,KAAWjD,E","sources":["component/CrouselTechnical.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { templatePage } from '../Redux/action';\r\nimport '../css/crousel.css';\r\n\r\nconst CrouselTechnical = ({ techImages }) => {\r\n    const [hoveredImage, setHoveredImage] = useState(null);\r\n    const [loadingImageId, setLoadingImageId] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 2500,\r\n        cssEase: 'ease-in-out',\r\n        swipeToSlide: true,\r\n        draggable: true,\r\n        lazyLoad: 'ondemand',\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: { slidesToShow: 4 }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: { slidesToShow: 4 }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: { slidesToShow: 2 }\r\n            },\r\n            {\r\n                breakpoint: 360,\r\n                settings: { slidesToShow: 2 }\r\n            }\r\n        ]\r\n    };\r\n\r\n    const handleClick = (e, imageId) => {\r\n        e.preventDefault();\r\n        const path = `/techmain/${imageId}`;\r\n        navigate(path);\r\n        dispatch(templatePage(imageId));\r\n    };\r\n\r\n    return (\r\n        <section className=\"carousel-container\" aria-label=\"Technical Resume Templates Carousel\">\r\n            <Slider {...settings}>\r\n                {techImages?.map((image) => (\r\n                    <div key={image.id} className=\"carousel-slide\">\r\n                        <div\r\n                            className=\"carousel-image-wrapper\"\r\n                            onMouseEnter={() => setHoveredImage(image.id)}\r\n                            onMouseLeave={() => setHoveredImage(null)}\r\n                        >\r\n                            {loadingImageId === image.id && (\r\n                                <div className=\"image-loader\">Loading...</div>\r\n                            )}\r\n\r\n                            <LazyLoadImage\r\n                                className=\"carousel-image\"\r\n                                src={image.src}\r\n                                alt={image.alt || \"Technical Resume Template\"}\r\n                                effect=\"blur\"\r\n                                beforeLoad={() => setLoadingImageId(image.id)}\r\n                                afterLoad={() => setLoadingImageId(null)}\r\n                                placeholderSrc=\"/placeholder.jpg\"\r\n                            />\r\n\r\n                            {hoveredImage === image.id && (\r\n                                <button\r\n                                    onClick={(e) => handleClick(e, image.id)}\r\n                                    className=\"carousel-button\"\r\n                                    aria-label=\"View Resume Template\"\r\n                                    data-text=\"Touch\"\r\n                                    data-text-desktop=\"Go Your Resume\"\r\n                                >\r\n                                    Go Resume\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default React.memo(CrouselTechnical);\r\n"],"names":["CrouselTechnical","_ref","techImages","hoveredImage","setHoveredImage","useState","loadingImageId","setLoadingImageId","navigate","useNavigate","dispatch","useDispatch","_jsx","className","children","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","cssEase","swipeToSlide","draggable","lazyLoad","responsive","breakpoint","settings","map","image","_jsxs","onMouseEnter","id","onMouseLeave","LazyLoadImage","src","alt","effect","beforeLoad","afterLoad","placeholderSrc","onClick","e","handleClick","imageId","preventDefault","templatePage","React"],"sourceRoot":""}