{"version":3,"file":"static/js/4660.baf61ca3.chunk.js","mappings":"kPAUA,MAAMA,EAAmBC,IAAoB,IAAnB,WAAEC,GAAWD,EACnC,MAAOE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,MAC7CG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAqCjBC,EAAAA,EAAAA,YAAU,KACNC,OAAOC,SAAS,EAAG,EAAE,GACpB,IAQL,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAqB,aAAW,4BAA2BC,UACtEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CA/CXC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,cAAc,EACdC,WAAY,CACR,CACIC,WAAY,KACZC,SAAU,CACNP,aAAc,IAGtB,CACIM,WAAY,IACZC,SAAU,CACNP,aAAc,IAGtB,CACIM,WAAY,IACZC,SAAU,CACNP,aAAc,IAGtB,CACIM,WAAY,IACZC,SAAU,CACNP,aAAc,KAiBFL,SACff,GAAcA,EAAW4B,KAAKC,IAC3BhB,EAAAA,EAAAA,KAAA,OAAoBC,UAAU,iBAAgBC,UAC1Ce,EAAAA,EAAAA,MAAA,OACIC,aAAcA,IAAM7B,EAAgB2B,EAAMG,IAC1CC,aAAcA,IAAM/B,EAAgB,MACpCY,UAAU,yBAAwBC,SAAA,CAEjCX,IAAmByB,EAAMG,KACtBnB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,SAAC,gBAElCF,EAAAA,EAAAA,KAACqB,EAAAA,cACG,CACAC,IAAKN,EAAMM,IACXC,IAAKP,EAAMO,IACXC,MAAO,CAACC,OAAO,QAAQC,MAAM,QAAQC,UAAU,SAC/C1B,UAAU,iBACT2B,OAAQA,KACjCrC,IAAmByB,EAAMG,IAC3B3B,EAAkB,KACpB,EAEFqC,WAAYA,IAAMrC,EAAkBwB,EAAMG,MAGf/B,IAAiB4B,EAAMG,KACpBnB,EAAAA,EAAAA,KAAA,UACI8B,QAAUC,GAnCtBC,EAACD,EAAGE,KACpBF,EAAEG,iBAEFzC,EADa,eAAewC,KAE5BtC,GAASwC,EAAAA,EAAAA,IAAaF,GAAS,EA+BaD,CAAYD,EAAGf,EAAMG,IAErC,YAAU,QACVlB,UAAU,iBACd4B,WAAYA,IAAMrC,EAAkBwB,EAAMG,IAC1CiB,UAAWA,IAAM5C,EAAkB,MACnC6C,eAAgBrB,EAAMO,IAAIrB,SACzB,oBAhCHc,EAAMG,SAwCtB,EAGd,EAAemB,EAAAA,KAAWrD,E","sources":["component/ShadiCardCrousel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useNavigate } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { templatePage } from '../Redux/action';\r\nimport '../css/coverLetterCrousel.css'\r\n\r\nconst ShadiCardCrousel = ({ shadi_Card}) => {\r\n    const [hoveredImage, setHoveredImage] = useState(null);\r\n    const [loadingImageId,setLoadingImageId] =useState(null);\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 2000,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 200,\r\n        swipeToSlide: true,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 768,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 360,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n      }, []);\r\n    \r\n    const handleClick = (e, imageId) => {\r\n        e.preventDefault();\r\n        const path = `/shadi-card/${imageId}`;\r\n        navigate(path);\r\n        dispatch(templatePage(imageId));\r\n    };\r\n    return (\r\n        <div className=\"carousel-container\" aria-label=\"Resume Templates Carousel\">\r\n            <Slider {...settings}>\r\n                {shadi_Card && shadi_Card.map((image) => (\r\n                    <div key={image.id} className=\"carousel-slide\">\r\n                        <div\r\n                            onMouseEnter={() => setHoveredImage(image.id)}\r\n                            onMouseLeave={() => setHoveredImage(null)}\r\n                            className='carousel-image-wrapper'\r\n                        >\r\n                            {loadingImageId === image.id &&(\r\n                                <div className=\"image-loader\">Loading...</div>\r\n                            )}\r\n                            <LazyLoadImage\r\n                                // className=\"cover-carousel-image\"\r\n                                src={image.src}\r\n                                alt={image.alt}\r\n                                style={{height:'350px',width:'250px',objectFit:'cover'}}\r\n                                className=\"carousel-image\"\r\n                                 onLoad={() => {\r\n    if (loadingImageId === image.id) {\r\n      setLoadingImageId(null);\r\n    }\r\n  }}\r\n  beforeLoad={() => setLoadingImageId(image.id)}\r\n\r\n                            />\r\n                            {hoveredImage === image.id && (\r\n                                <button\r\n                                    onClick={(e) => handleClick(e, image.id)}\r\n                                    // className=\"carousel-button\"\r\n                                    data-text=\"Touch\"\r\n                                    className=\"carousel-image\"\r\n                                beforeLoad={() => setLoadingImageId(image.id)}\r\n                                afterLoad={() => setLoadingImageId(null)}\r\n                                placeholderSrc={image.alt}\r\n                                >\r\n                                    make resume\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n        </div>\r\n    );\r\n}\r\nexport default React.memo(ShadiCardCrousel);\r\n"],"names":["ShadiCardCrousel","_ref","shadi_Card","hoveredImage","setHoveredImage","useState","loadingImageId","setLoadingImageId","navigate","useNavigate","dispatch","useDispatch","useEffect","window","scrollTo","_jsx","className","children","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","swipeToSlide","responsive","breakpoint","settings","map","image","_jsxs","onMouseEnter","id","onMouseLeave","LazyLoadImage","src","alt","style","height","width","objectFit","onLoad","beforeLoad","onClick","e","handleClick","imageId","preventDefault","templatePage","afterLoad","placeholderSrc","React"],"sourceRoot":""}