{"version":3,"file":"static/js/5281.02a330bd.chunk.js","mappings":"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","sources":["component/PdfDownloadButton.jsx","component/coverletterFolder/Preview201.jsx","component/Toolbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n// import GoogleAd from './adFolder/GoogleAd'; // Adjust path as needed\r\nimport '../css/PdfDownloadButton.css'\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport Popup from 'reactjs-popup';\r\nconst ResumeDownloadSection = ({\r\n    inputFields,\r\n    setInputFields,\r\n    bgColor,\r\n    setBgColor,\r\n    fontStyle,\r\n    setFontStyle,\r\n    headingColor,\r\n    setHeadingColor,\r\n    fontColor,\r\n    setFontColor,\r\n    fontSize,\r\n    setFontSize,\r\n    headingSize,\r\n    setHeadingSize,\r\n    margin,\r\n    setMargin,\r\n    padding,\r\n    setPadding,\r\n    lineSpacing,\r\n    setLineSpacing,\r\n    sectionSpacing,\r\n    setSectionSpacing,\r\n    elementId,\r\n}) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const handleDownloadPDF = async () => {\r\n        setIsLoading(true);\r\n        const element = document.getElementById(elementId);\r\n        \r\n        if (!element) {\r\n            setIsLoading(false);\r\n            alert('Resume element not found!');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const scale = 2;  // Adjust scale for better quality\r\n            const canvas = await html2canvas(element, {\r\n                scale: scale,\r\n                useCORS: true,\r\n                logging: false,\r\n                textRendering: \"geometricPrecision\",\r\n                width: element.scrollWidth,\r\n                height: element.scrollHeight,\r\n                windowWidth: element.scrollWidth,\r\n                windowHeight: element.scrollHeight,\r\n            });\r\n    \r\n            const imgData = canvas.toDataURL('image/jpeg', 0.85);  // High quality JPEG with 85% compression\r\n            const pdf = new jsPDF('p', 'mm', 'a4');\r\n    \r\n            const imgWidth = 210;\r\n            const pageHeight = 297;\r\n            const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n            let heightLeft = imgHeight;\r\n            let position = 0;\r\n    \r\n            // Force content into two pages\r\n            const maxHeight = 2 * pageHeight;  // Max height for two pages combined\r\n            let remainingHeight = imgHeight;\r\n    \r\n            // Add image to the PDF, ensuring it's split into two pages if necessary\r\n            if (remainingHeight <= maxHeight) {\r\n                pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight, undefined, 'FAST');\r\n                remainingHeight -= pageHeight;  // First page\r\n    \r\n                // Second page logic\r\n                if (remainingHeight > 0) {\r\n                    pdf.addPage();\r\n                    pdf.addImage(imgData, 'JPEG', 0, -pageHeight, imgWidth, imgHeight, undefined, 'FAST');  // Shift for second page\r\n                }\r\n            } else {\r\n                // If content is too large for 1 page, force split into two pages.\r\n                pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, pageHeight, undefined, 'FAST');  // First page\r\n                pdf.addPage();\r\n                pdf.addImage(imgData, 'JPEG', 0, -pageHeight, imgWidth, pageHeight, undefined, 'FAST');  // Second page\r\n            }\r\n    \r\n            // Get filename from input fields, ensuring it's safe for use in filenames\r\n            const filename = inputFields ? inputFields.replace(/[^\\w\\s]/gi, '_') : 'default_filename';\r\n            pdf.save(`${filename}.pdf`);\r\n    \r\n            setIsLoading(false);    \r\n            // Clear canvas to free memory\r\n            canvas.width = 0;\r\n            canvas.height = 0;\r\n    \r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            // console.error('Error downloading PDF:', error);\r\n            alert('Failed to download PDF. Please try again.');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"resume-download-section\" \r\n        style={{ width:'fit-content', border:'1px solid black' }}>\r\n            \r\n\r\n            {/* Customization Controls */}\r\n            <div className=\"customization-controls\" >\r\n                <div className=\"color-picker\" title='Background Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={bgColor}\r\n                        onChange={(e) => setBgColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                        \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"font-style-selector\" title=\"Font Style\">\r\n  <i className=\"fa-solid fa-font\" />\r\n  <select\r\n    value={fontStyle}\r\n    onChange={(e) => setFontStyle(e.target.value)}\r\n    className=\"font-select\"\r\n  >\r\n    <option value=\"Arial\">Arial</option>\r\n    <option value=\"Arial Black\">Arial Black</option>\r\n    <option value=\"Verdana\">Verdana</option>\r\n    <option value=\"Tahoma\">Tahoma</option>\r\n    <option value=\"Trebuchet MS\">Trebuchet MS</option>\r\n    <option value=\"Times New Roman\">Times New Roman</option>\r\n    <option value=\"Georgia\">Georgia</option>\r\n    <option value=\"Garamond\">Garamond</option>\r\n    <option value=\"Courier New\">Courier New</option>\r\n    <option value=\"Brush Script MT\">Brush Script MT</option>\r\n    <option value=\"Impact\">Impact</option>\r\n    <option value=\"Lucida Console\">Lucida Console</option>\r\n    <option value=\"Palatino Linotype\">Palatino Linotype</option>\r\n    <option value=\"Segoe UI\">Segoe UI</option>\r\n    <option value=\"Comic Sans MS\">Comic Sans MS</option>\r\n    <option value=\"Calibri\">Calibri</option>\r\n    <option value=\"Cambria\">Cambria</option>\r\n    <option value=\"Helvetica\">Helvetica</option>\r\n    <option value=\"Monaco\">Monaco</option>\r\n    <option value=\"Optima\">Optima</option>\r\n  </select>\r\n</div>\r\n\r\n\r\n                <div className=\"color-picker\"  title='Font Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={fontColor}\r\n                        onChange={(e) => setFontColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"color-picker\" title='Heading Color'>\r\n                    <i className=\"fa-solid fa-fill-drip\" />\r\n                    <input\r\n                        type=\"color\"\r\n                        value={headingColor}\r\n                        onChange={(e) => setHeadingColor(e.target.value)}\r\n                        className=\"color-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"size-selector\" title='Heading Size'>\r\n                    <i className=\"fa-solid fa-heading\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={headingSize}\r\n                        onChange={(e) => setHeadingSize(Number(e.target.value))}\r\n                        className=\"size-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"size-selector\" title='Font Size'>\r\n                    <i className=\"fa-solid fa-font\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={fontSize}\r\n                        onChange={(e) => setFontSize(Number(e.target.value))}\r\n                        className=\"size-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Margin'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={margin}\r\n                        onChange={(e) => setMargin(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Padding'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={padding}\r\n                        onChange={(e) => setPadding(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Line Spacing'>\r\n                    <i className=\"fa-solid fa-font\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        value={lineSpacing}\r\n                        onChange={(e) => setLineSpacing(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"spacing-selector\" title='Section Spacing'>\r\n                    <i className=\"fa-solid fa-arrows-up-down-left-right\" />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={sectionSpacing}\r\n                        onChange={(e) => setSectionSpacing(Number(e.target.value))}\r\n                        className=\"spacing-input\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"headers  d-md-flex\" title='Give Your Resume a Name'>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your resume name\"\r\n                    className=\"resume-name-input\"\r\n                    value={inputFields}\r\n                    onChange={(e) => setInputFields(e.target.value)}\r\n                />\r\n                <div>\r\n                    <Popup modal nested trigger={<button\r\n                    onClick={handleDownloadPDF}\r\n                    type=\"button\"\r\n                    className=\"btn download-button\"\r\n                    disabled={isLoading}\r\n                    title='Download'\r\n                >\r\n                    {isLoading ? 'Downloading...' : 'Download'}\r\n                </button>}>\r\n                {( close)=>(\r\n                    <div>\r\n                        <h3>Go For Next <i class=\"fa-solid fa-jet-fighter\"></i>...</h3>\r\n                        <button type='submit' onClick={(e)=>{\r\n                            handleDownloadPDF(e);\r\n                            close();\r\n                        }}>Close</button>\r\n                    </div>\r\n                    \r\n                )}\r\n                </Popup>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(ResumeDownloadSection);\r\n","import React, { useEffect, useState } from 'react';\r\nimport './previewcss/preview205.css';\r\nimport { useSelector } from 'react-redux';\r\nimport PdfDownloadButton from '../PdfDownloadButton'\r\nimport Toolbar from '../Toolbar';\r\nexport default function Preview201() {\r\n    const [localData, setLocalData] = useState({});\r\n    const [inputFields, setInputFields] = useState(\"resume.pdf\");\r\n    const [bgColor, setBgColor] = useState(\"white\");\r\n    const [fontStyle, setFontStyle] = useState(\"Arial\");\r\n    const [headingColor, setHeadingColor] = useState(\"black\");\r\n    const [fontColor, setFontColor] = useState(\"black\");\r\n\r\n    // Adding missing state for PDF formatting\r\n    const [fontSize, setFontSize] = useState(\"12\");\r\n    const [headingSize, setHeadingSize] = useState(\"16\");\r\n    const [margin, setMargin] = useState(\"10\");\r\n    const [padding, setPadding] = useState(\"5\");\r\n    const [lineSpacing, setLineSpacing] = useState(\"1.5\");\r\n    const [sectionSpacing, setSectionSpacing] = useState(\"10\");\r\n\r\n    // Retrieve Redux state\r\n    const reduxData = useSelector(\r\n        (state) => state.reducer.personalInfo?.[0] || {}\r\n    );\r\n\r\n    // Check if there is data in localStorage when the component mounts\r\n    useEffect(() => {\r\n        const savedData = JSON.parse(localStorage.getItem(\"personalInfoData\"));\r\n        if (savedData) {\r\n            setLocalData(savedData); // Set local data if available\r\n        }\r\n    }, []);\r\n\r\n    // Combine redux data with local data, prioritize redux data\r\n    const result = Object.keys(reduxData).length > 0 ? reduxData : localData;\r\n\r\n\r\n    // Create a dynamic styles object\r\n    const dynamicStyle = {\r\n        fontSize: fontSize,\r\n        fontFamily: fontStyle,\r\n        lineHeight: lineSpacing,\r\n        color: fontColor,\r\n        heading: {\r\n            color: headingColor,\r\n            fontSize: headingSize,\r\n            fontFamily: fontStyle,\r\n            lineHeight: lineSpacing,\r\n        },\r\n    };\r\n    const changeAlignment = (alignment) => {\r\n        document.execCommand('justify' + alignment, false, null);\r\n    };\r\n    \r\n    const toggleStyle = (style) => {\r\n        document.execCommand(style, false, null);\r\n    };\r\n\r\n    // Function to toggle lists (bullet and numbered)\r\n    const toggleList = (listType) => {\r\n        document.execCommand(listType, false, null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n       \r\n        <div className=\" justify-content-between marging\">\r\n        <Toolbar toggleStyle={toggleStyle} changeAlignment={changeAlignment} toggleList={toggleList}  />              \r\n\r\n            <div className=\"contentss\" id='Alish_mirza'\r\n            contentEditable\r\n            suppressContentEditableWarning={true}\r\n            spellCheck={true}\r\n                style={{ width:'auto',backgroundColor: bgColor, margin: margin, \r\n                padding: padding ,height:'auto'}}>\r\n                <div className='header205'>\r\n                    <div className=\"left205\" style={{backgroundColor:'#333b4e',marginBottom:'-17px',paddingTop: '10px',paddingBottom:'10px',padding:'5px'}}>\r\n                        <h3 style={dynamicStyle.heading}>{result.fullname}</h3>\r\n                        <h3 style={dynamicStyle}>{result.jobposition}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"right205 d-flex justify-content-around align-items-center\" style={{backgroundColor:'#212b33'}}>\r\n                        <p className='text-end ' style={dynamicStyle}>{result.email} <span className=\"icon\" >✉️</span></p>\r\n                        <p className='text-end' style={dynamicStyle}>{result.mobileNumber} <span className=\"icon\" >📞</span></p>\r\n                        <p className='text-end' style={dynamicStyle}>{result.city}, {result.state || \"CA\"} <span className=\"icon\" >📍</span></p>\r\n                        <p className='text-end' style={dynamicStyle}>{result.linkedin} <span className=\"icon\" >🔗</span></p>\r\n                    </div>\r\n                </div>\r\n               \r\n                <div style={{lineHeight:sectionSpacing}}>\r\n                    <p style={dynamicStyle}><>To:</></p>\r\n                    <p style={dynamicStyle}>{result.hiringManager}</p>\r\n                    <p style={dynamicStyle}>Human Resources Manager</p>\r\n                    <p style={dynamicStyle}>Optimal Workplace Inc.</p>\r\n                    <p style={dynamicStyle}>321 Employment Avenue</p>\r\n                    <p style={dynamicStyle}>San Francisco, CA</p>\r\n                    <br />\r\n                    <p style={dynamicStyle}>Dear {result.hiringManager},</p>\r\n                    <p style={dynamicStyle}>{result.object}</p>\r\n  \r\n                    <br />\r\n                    <p style={dynamicStyle}>Sincerely,</p>\r\n                    <p style={dynamicStyle}>{result.fullname}</p>\r\n                </div>\r\n            </div>\r\n            <PdfDownloadButton\r\n                inputFields={inputFields}\r\n                setInputFields={setInputFields}\r\n                bgColor={bgColor}\r\n                setBgColor={setBgColor}\r\n                fontStyle={fontStyle}\r\n                setFontStyle={setFontStyle}\r\n                headingColor={headingColor}\r\n                setHeadingColor={setHeadingColor}\r\n                fontColor={fontColor}\r\n                setFontColor={setFontColor}\r\n                fontSize={fontSize}\r\n                setFontSize={setFontSize}\r\n                headingSize={headingSize}\r\n                setHeadingSize={setHeadingSize}\r\n                margin={margin}\r\n                setMargin={setMargin}\r\n                padding={padding}\r\n                setPadding={setPadding}\r\n                lineSpacing={lineSpacing}\r\n                setLineSpacing={setLineSpacing}\r\n                sectionSpacing={sectionSpacing}\r\n                setSectionSpacing={setSectionSpacing}\r\n                elementId=\"Alish_mirza\"\r\n            />\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n","import React,{memo} from 'react';\r\n\r\n\r\n    export const changeAlignment = (alignment) => {\r\n        document.execCommand('justify' + alignment, false, null);\r\n    };\r\n    \r\n    \r\n    export const toggleStyle = (style) => {\r\n        document.execCommand(style, false, null);\r\n    };\r\n\r\n    // Function to toggle lists (bullet and numbered)\r\n    export const toggleList = (listType) => {\r\n        document.execCommand(listType, false, null);\r\n    };\r\n// Reusable Toolbar Component\r\n function Toolbar({ toggleStyle, changeAlignment, toggleList }) {\r\n    \r\n    return (\r\n        <div style={{\r\n          display:'flex', justifyContent:'start', alignItems:'center', width:'fit-content',borderRadius:'15px', position: 'fixed', top: '150px', left: '10px', right: '10px', zIndex: '1000', backgroundColor: 'transparent', padding: '10px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', marginBottom: '20px'\r\n        }}>\r\n            <button onClick={() => toggleStyle('bold')}><b>B</b></button>\r\n            <button onClick={() => toggleStyle('italic')}><i>I</i></button>\r\n            <button onClick={() => toggleStyle('underline')}><u>U</u></button>\r\n            <button onClick={() => toggleList('insertUnorderedList')}><i className=\"fa-solid fa-list-ul\"></i></button>\r\n            <button onClick={() => toggleList('insertOrderedList')}><i className=\"fa-solid fa-list-ol\"></i></button>\r\n            <button onClick={() => changeAlignment('Left')}><i className=\"fa-solid fa-align-left\"></i></button>\r\n            <button onClick={() => changeAlignment('Center')}><i className=\"fa-solid fa-align-center\"></i></button>\r\n            <button onClick={() => changeAlignment('Right')}><i className=\"fa-solid fa-align-right\"></i></button>\r\n            <button onClick={() => changeAlignment('Justify')}><i className=\"fa-solid fa-align-justify\"></i></button>\r\n        </div>\r\n    );\r\n}\r\nexport default memo(Toolbar);"],"names":["ResumeDownloadSection","_ref","inputFields","setInputFields","bgColor","setBgColor","fontStyle","setFontStyle","headingColor","setHeadingColor","fontColor","setFontColor","fontSize","setFontSize","headingSize","setHeadingSize","margin","setMargin","padding","setPadding","lineSpacing","setLineSpacing","sectionSpacing","setSectionSpacing","elementId","isLoading","setIsLoading","useState","handleDownloadPDF","async","element","document","getElementById","alert","scale","canvas","html2canvas","useCORS","logging","textRendering","width","scrollWidth","height","scrollHeight","windowWidth","windowHeight","imgData","toDataURL","pdf","jsPDF","imgWidth","pageHeight","imgHeight","position","remainingHeight","addImage","undefined","addPage","filename","replace","save","error","_jsxs","className","style","border","children","title","_jsx","type","value","onChange","e","target","Number","step","placeholder","Popup","modal","nested","trigger","onClick","disabled","close","class","React","Preview201","localData","setLocalData","reduxData","useSelector","state","_state$reducer$person","reducer","personalInfo","useEffect","savedData","JSON","parse","localStorage","getItem","result","Object","keys","length","dynamicStyle","fontFamily","lineHeight","color","heading","Toolbar","toggleStyle","execCommand","changeAlignment","alignment","toggleList","listType","id","contentEditable","suppressContentEditableWarning","spellCheck","backgroundColor","marginBottom","paddingTop","paddingBottom","fullname","jobposition","email","mobileNumber","city","linkedin","_Fragment","hiringManager","object","PdfDownloadButton","display","justifyContent","alignItems","borderRadius","top","left","right","zIndex","boxShadow","memo"],"sourceRoot":""}